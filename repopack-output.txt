================================================================
Repopack Output File
================================================================

This file was generated by Repopack on: 2024-09-24T01:56:45.952Z

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Repository structure
3. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
  distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.



For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.gitignore
app.json
app/_layout.jsx
app/(tabs)/_layout.jsx
app/(tabs)/discover.jsx
app/(tabs)/mytrip.jsx
app/(tabs)/profile.jsx
app/auth/sign-in/index.js
app/auth/sign-up/index.js
app/create-trip/generate-trip.jsx
app/create-trip/review-trip.jsx
app/create-trip/search-place.jsx
app/create-trip/select-budget.jsx
app/create-trip/select-dates.jsx
app/create-trip/select-traveler.jsx
app/index.tsx
app/trip-details/index.jsx
babel.config.js
components/CreateTrip/OptionCard.jsx
components/Login.jsx
components/MyTrips/StartNewTripCard.jsx
components/MyTrips/UserTripCard.jsx
components/MyTrips/UserTripList.jsx
components/TripDetails/FlightInfo.jsx
components/TripDetails/HotelCard.jsx
components/TripDetails/HotelList.jsx
components/TripDetails/PlaceCard.jsx
components/TripDetails/PlannedTrip.jsx
configs/AiModal.jsx
configs/FirebaseConfig.js
constants/Colors.ts
constants/Options.js
context/CreateTripContext.js
package.json
README.md
scripts/reset-project.js
services/GooglePlaceApi.jsx
services/LocalStorageService.jsx
tsconfig.json

================================================================
Repository Files
================================================================

================
File: .gitignore
================
node_modules/
.expo/
dist/
npm-debug.*
*.jks
*.p8
*.p12
*.key
*.mobileprovision
*.orig.*
web-build/

# macOS
.DS_Store

# @generated expo-cli sync-2b81b286409207a5da26e14c78851eb30d8ccbdb
# The following patterns were generated by expo-cli

expo-env.d.ts
# @end expo-cli

.env

================
File: app.json
================
{
  "expo": {
    "name": "ai-travel-planner-app",
    "slug": "ai-travel-planner-app",
    "version": "1.0.0",
    "orientation": "portrait",
    "icon": "./assets/images/icon.png",
    "scheme": "myapp",
    "userInterfaceStyle": "automatic",
    "splash": {
      "image": "./assets/images/splash.png",
      "resizeMode": "contain",
      "backgroundColor": "#ffffff"
    },
    "ios": {
      "supportsTablet": true
    },
    "android": {
      "adaptiveIcon": {
        "foregroundImage": "./assets/images/adaptive-icon.png",
        "backgroundColor": "#ffffff"
      }
    },
    "web": {
      "bundler": "metro",
      "output": "static",
      "favicon": "./assets/images/favicon.png"
    },
    "plugins": [
      "expo-router",
      [
        "@react-native-google-signin/google-signin"
    ]
    ],
    "experiments": {
      "typedRoutes": true
    }
  }
}

================
File: app/_layout.jsx
================
import { useFonts } from "expo-font";
import { Stack } from "expo-router";
import {CreateTripContext} from '../context/CreateTripContext'
import { useState } from "react";
export default function RootLayout() {

  useFonts({
    'outfit':require('./../assets/fonts/Outfit-Regular.ttf'),
    'outfit-medium':require('./../assets/fonts/Outfit-Medium.ttf'),
    'outfit-bold':require('./../assets/fonts/Outfit-Bold.ttf'),
  })

  const [tripData,setTripData]=useState([]);
  return (
    <CreateTripContext.Provider value={{tripData,setTripData}}>
    <Stack screenOptions={{
      headerShown:false
    }}>
      {/* <Stack.Screen name="index" options={{
        headerShown:false
      }}/> */}
      <Stack.Screen name="(tabs)"/>
    </Stack>
    </CreateTripContext.Provider>
  );
}

================
File: app/(tabs)/_layout.jsx
================
import { View, Text } from 'react-native'
import React from 'react'
import { Tabs } from 'expo-router'
import { Ionicons } from '@expo/vector-icons';
import {Colors} from './../../constants/Colors'
export default function TabLayout() {
  return (
    <Tabs screenOptions={{
        headerShown:false,
        tabBarActiveTintColor:Colors.PRIMARY
    }}>
        <Tabs.Screen name="mytrip"
          options={{
            tabBarLabel:'My Trip',
            tabBarIcon:({color})=><Ionicons name="location-sharp" 
            size={24} color={color} />
          }}
        />
        <Tabs.Screen name="discover"
        options={{
          tabBarLabel:'Discover',
          tabBarIcon:({color})=><Ionicons name="globe-sharp" 
          size={24} color={color} />
        }}
        />
        <Tabs.Screen name="profile"
        options={{
          tabBarLabel:'Profile',
          tabBarIcon:({color})=><Ionicons name="people-circle" 
          size={24} color={color} />
        }}
        />
    </Tabs>
  )
}

================
File: app/(tabs)/discover.jsx
================
import { View, Text } from 'react-native'
import React from 'react'

export default function discover() {
  return (
    <View>
      <Text>discover</Text>
    </View>
  )
}

================
File: app/(tabs)/mytrip.jsx
================
import { View, Text, ActivityIndicator, TouchableOpacity, ScrollView } from 'react-native'
import React, { useEffect, useState } from 'react'
import {Colors} from './../../constants/Colors'
import { Ionicons } from '@expo/vector-icons';
import StartNewTripCard from '../../components/MyTrips/StartNewTripCard';
import { collection, getDocs, orderBy, query, where } from 'firebase/firestore';
import {auth, db} from './../../configs/FirebaseConfig'
import UserTripList from '../../components/MyTrips/UserTripList';
import { useRouter } from 'expo-router';
export default function MyTrip() {

  const [userTrips,setUserTrips]=useState([]);
  const user=auth.currentUser;
  const [loading,setLoading]=useState(false);
  const router=useRouter();
  useEffect(()=>{
    user&&GetMyTrips();
  },[user])

  const GetMyTrips=async()=>{ 
    setLoading(true); 
    setUserTrips([]);
    const q=query(collection(db,'UserTrips'),
    where('userEmail','==',user?.email));
    const querySnapshot=await getDocs(q);
    querySnapshot.forEach((doc) => { 
      // doc.data() is never undefined for query doc snapshots
      console.log(doc.id, " => ", doc.data());
      setUserTrips(prev=>[...prev,doc.data()])
    });
    setLoading(false);
    
  }
  return (
    <ScrollView style={{
      padding:25,
      paddingTop:55,
      backgroundColor:Colors.WHITE,
      height:'100%'
    }}>

      <View
      style={{
        display:'flex',
        flexDirection:'row',
        alignContent:'center',
        justifyContent:'space-between'
      }}
      >
        <Text style={{
          fontFamily:'outfit-bold',
          fontSize:35
        }}>My Trips</Text>
        <TouchableOpacity onPress={()=>router.push('/create-trip/search-place')}>
        <Ionicons name="add-circle" size={50} color="black" />
        </TouchableOpacity>
      </View>
      {loading&&<ActivityIndicator size={'large'} color={Colors.PRIMARY} />}

      {userTrips?.length==0? 
        <StartNewTripCard/>
        :
        <UserTripList userTrips={userTrips} />
      } 
      <View style={{
        height:100
      }}>

      </View>
      {/* <Text>{JSON.stringify(userTrips[0])}</Text> */}
    </ScrollView>
  )
}

================
File: app/(tabs)/profile.jsx
================
import { View, Text } from 'react-native'
import React from 'react'

export default function Profile() {
  return (
    <View>
      <Text>Profile</Text>
    </View>
  )
}

================
File: app/auth/sign-in/index.js
================
import { View, Text, TextInput, StyleSheet, TouchableOpacity, ToastAndroid } from 'react-native'
import React, { useEffect, useState } from 'react'
import { useNavigation, useRouter } from 'expo-router'
import {Colors} from './../../../constants/Colors'
import { Ionicons } from '@expo/vector-icons';
import { signInWithEmailAndPassword } from 'firebase/auth';
import {auth} from './../../../configs/FirebaseConfig'
export default function SignIn() {
  const navigation=useNavigation();
  const router=useRouter();

  const [email,setEmail]=useState();
  const [password,setPassword]=useState();

  useEffect(()=>{
    navigation.setOptions({
      headerShown:false
    })
  },[])

  const onSignIn=()=>{

    if(!email&&!password)
    {
      ToastAndroid.show("Please Enter Email & Passsword",ToastAndroid.LONG)
      return;
    }

    signInWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed in 
    const user = userCredential.user;
    router.replace('/mytrip')
    console.log(user);
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
    console.log(errorMessage,error.code)
    if(errorCode=='auth/invalid-credential')
    {
      ToastAndroid.show("Invalid credentials",ToastAndroid.LONG)
    }
  });

  

  }

  return (
    <View style={{
      padding:25,
      paddingTop:40,
      backgroundColor:Colors.WHITE,
     height:'100%'
    }}>
      <TouchableOpacity onPress={()=>router.back()}>
        <Ionicons name="arrow-back" size={24} color="black" />
      </TouchableOpacity>
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:30,
        marginTop:30
      }}>Let's Sign You In</Text>
       <Text style={{
        fontFamily:'outfit',
        fontSize:30,
        color:Colors.GRAY,
        marginTop:20
      }}>Welcome Back</Text>
       <Text style={{
        fontFamily:'outfit',
        fontSize:30,
        color:Colors.GRAY,
        marginTop:10
      }}>You've been missed!</Text>

        {/* Email  */}
      <View style={{
        marginTop:50
      }}>
        <Text style={{
          fontFamily:'outfit'
        }}>Email</Text>
        <TextInput
        style={styles.input}
        onChangeText={(value)=>setEmail(value)}
         placeholder='Enter Email' />
      </View>
      {/* Password  */}
      <View style={{
        marginTop:20
      }}>
        <Text style={{
          fontFamily:'outfit'
        }}>Password</Text>
        <TextInput
        secureTextEntry={true}
        style={styles.input}
        onChangeText={(value)=>setPassword(value)}
         placeholder='Enter Password' />
      </View>

        {/* Sign In Button  */}
      <TouchableOpacity onPress={onSignIn} style={{
        padding:20,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:50
      }}>
          <Text style={{
            color:Colors.WHITE,
            textAlign:'center'
          }}>Sign In</Text>
      </TouchableOpacity>

        {/* Create Account Button  */}
        <TouchableOpacity 
          onPress={()=>router.replace('auth/sign-up')}
        style={{
        padding:20,
        backgroundColor:Colors.WHITE,
        borderRadius:15,
        marginTop:20,
        borderWidth:1
      }}>
          <Text style={{
            color:Colors.PRIMARY,
            textAlign:'center'
          }}>Create Account</Text>
      </TouchableOpacity>

    </View>
  )
}

const styles = StyleSheet.create({
  input:{
      padding:15,
      borderWidth:1,
      borderRadius:15,
      borderColor:Colors.GRAY,
      fontFamily:'outfit'
  }
})

================
File: app/auth/sign-up/index.js
================
import { View, Text, StyleSheet, TextInput, TouchableOpacity, ToastAndroid } from 'react-native'
import React, { useEffect, useState } from 'react'
import { useNavigation, useRouter } from 'expo-router'
import { Colors } from '../../../constants/Colors';
import { Ionicons } from '@expo/vector-icons';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import {auth} from './../../../configs/FirebaseConfig'
export default function SignUp() {
  const navigation=useNavigation();
  const router=useRouter();

  const [email,setEmail]=useState();
  const [password,setPassword]=useState();
  const [fullName,setFullName]=useState();



  useEffect(()=>{
    navigation.setOptions({
      headerShown:false
    });

   
  },[]);


  const OnCreateAccount=()=>{

    if(!email&&!password&&!fullName)
    {
      ToastAndroid.show('Please enter all details',ToastAndroid.LONG);
      return ;
    }

    
    createUserWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed up 
    const user = userCredential.user;
    console.log(user);
    router.replace('/mytrip')

    

    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
     console.log("--",errorMessage,errorCode);
    // ..
  });
  }

  return (
    <View
    style={{
      padding:25,
      paddingTop:50,
      backgroundColor:Colors.WHITE,
      height:'100%'
    }}
    >
        <TouchableOpacity onPress={()=>router.back()}>
        <Ionicons name="arrow-back" size={24} color="black" />
      </TouchableOpacity>
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:30,
        marginTop:30
      }}>Create New Account</Text>

      {/* User Full Name  */}
    <View style={{
        marginTop:50
      }}>
        <Text style={{
          fontFamily:'outfit'
        }}>Full Name</Text>
        <TextInput
        style={styles.input}
         placeholder='Enter Full Name'
         onChangeText={(value)=>setFullName(value)}
         />
      </View>
         {/* Email  */}
      <View style={{
        marginTop:20
      }}>
        <Text style={{
          fontFamily:'outfit'
        }}>Email</Text>
        <TextInput
        style={styles.input}
        onChangeText={(value)=>setEmail(value)}
         placeholder='Enter Email' />
      </View>
      {/* Password  */}
      <View style={{
        marginTop:20
      }}>
        <Text style={{
          fontFamily:'outfit'
        }}>Password</Text>
        <TextInput
        secureTextEntry={true}
        style={styles.input}
        onChangeText={(value)=>setPassword(value)}
         placeholder='Enter Password' />
      </View>

         {/* Sign In Button  */}
         <TouchableOpacity onPress={OnCreateAccount} style={{
        padding:20,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:50
      }}>
          <Text style={{
            color:Colors.WHITE,
            textAlign:'center'
          }}>Create Account</Text>
      </TouchableOpacity>

        {/* Create Account Button  */}
        <TouchableOpacity
          onPress={()=>router.replace('auth/sign-in')}
        style={{
        padding:20,
        backgroundColor:Colors.WHITE,
        borderRadius:15,
        marginTop:20,
        borderWidth:1
      }}>
          <Text style={{
            color:Colors.PRIMARY,
            textAlign:'center'
          }}>Sign In</Text>
      </TouchableOpacity>

    </View>
  )
}

const styles = StyleSheet.create({
  input:{
    padding:15,
    borderWidth:1,
    borderRadius:15,
    borderColor:Colors.GRAY,
    fontFamily:'outfit'
}
})

================
File: app/create-trip/generate-trip.jsx
================
import { View, Text, Image } from 'react-native'
import React, { useContext, useEffect, useState } from 'react'
import { Colors } from '../../constants/Colors'
import { CreateTripContext } from '../../context/CreateTripContext'
import { AI_PROMPT } from '../../constants/Options';
import { chatSession } from '../../configs/AiModal';
import { useRouter } from 'expo-router';
import { doc, setDoc } from 'firebase/firestore';
import { auth, db } from './../../configs/FirebaseConfig'
export default function GenerateTrip() {
    const { tripData, setTripData } = useContext(CreateTripContext);
    const [loading, setLoading] = useState(false);
    const router = useRouter();
    const user = auth.currentUser;
    useEffect(() => {
        GenerateAiTrip()
    }, [])

    const GenerateAiTrip = async () => {
        setLoading(true);
        const FINAL_PROMPT = AI_PROMPT
            .replace('{location}', tripData?.locationInfo?.name)
            .replace('{totalDays}', tripData.totalNoOfDays)
            .replace('{totalNight}', tripData.totalNoOfDays - 1)
            .replace('{traveler}', tripData.traveler?.title)
            .replace('{budget}', tripData.budget)
            .replace('{totalDays}', tripData.totalNoOfDays)
            .replace('{totalNight}', tripData.totalNoOfDays - 1);

        console.log(FINAL_PROMPT);

        const result = await chatSession.sendMessage(FINAL_PROMPT);
        console.log(result.response.text());
        const tripResp = JSON.parse(result.response.text());
        setLoading(false)
        const docId = (Date.now()).toString();
        const result_ = await setDoc(doc(db, "UserTrips", docId), {
            userEmail: user.email,
            tripPlan: tripResp,// AI Result 
            tripData: JSON.stringify(tripData),//User Selection Data
            docId: docId
        }).then(resp=>{

        }).catch(e=>
            console.log(e)
        )


        router.push('(tabs)/mytrip');






    }

    return (
        <View style={{
            padding: 25,
            paddingTop: 75,
            backgroundColor: Colors.WHITE,
            height: '100%'
        }}>
            <Text style={{
                fontFamily: 'outfit-bold',
                fontSize: 35,
                textAlign: 'center'
            }}>
                Please Wait...
            </Text>
            <Text style={{
                fontFamily: 'outfit-medium',
                fontSize: 20,
                textAlign: 'center',
                marginTop: 40
            }}>
                We are working to generate your dream trip
            </Text>

            <Image source={require('./../../assets/images/plane.gif')}
                style={{
                    width: '100%',
                    height: 200,
                    objectFit: 'contain'
                }}

            />

            <Text style={{
                fontFamily: 'outfit',
                color: Colors.GRAY,
                fontSize: 20,
                textAlign: 'center'
            }}>Do not Go Back</Text>
        </View>
    )
}

================
File: app/create-trip/review-trip.jsx
================
import { View, Text, TouchableOpacity } from 'react-native'
import React, { useEffect } from 'react'
import { useNavigation, useRouter } from 'expo-router'
import {Colors} from './../../constants/Colors'
import { Ionicons } from '@expo/vector-icons';
import { useContext } from 'react';
import {CreateTripContext} from './../../context/CreateTripContext'
import moment from 'moment'
export default function ReviewTrip() {
 
    const navigation=useNavigation();
    const {tripData,setTripData}=useContext(CreateTripContext);

    const router=useRouter();
    useEffect(()=>{
        navigation.setOptions({
            headerShown:true,
            headerTransparent:true,
            headerTitle:''
        })
    },[])

    // 📍📆🗓️🚌💰
    return (
    <View style={{
        padding:25,
        paddingTop:75,
        backgroundColor:Colors.WHITE,
        height:'100%'
    }}>
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:35,
        marginTop:20
      }}>Review your trip</Text>

      <View style={{
        marginTop:20
      }}>
        <Text style={{
            fontFamily:'outfit-bold',
            fontSize:20
        }}>Before generating your trip , please review your selection</Text>
      
      {/* Destination Info  */}
      <View style={{
        marginTop:40,
        display:'flex',
        flexDirection:'row',
        gap:20
      }}>
      <Text style={{
        fontSize:30
      }}>📍</Text>
      <View>
        <Text style={{
            fontFamily:'outfit',
            fontSize:17,
            color:Colors.GRAY
        }}>Destination</Text>
        <Text style={{
            fontFamily:'outfit-medium',
            fontSize:20
        }}>{tripData?.locationInfo?.name}</Text>

      </View>
      </View>

       {/* Date Selected Info  */}
       <View style={{
        marginTop:25,
        display:'flex',
        flexDirection:'row',
        gap:20
      }}>
      <Text style={{
        fontSize:30
      }}>🗓️</Text>
      <View>
        <Text style={{
            fontFamily:'outfit',
            fontSize:17,
            color:Colors.GRAY
        }}>Travel Date</Text>
        <Text style={{
            fontFamily:'outfit-medium',
            fontSize:20
        }}>{moment(tripData?.startDate).format('DD MMM')
        +" To "+
        moment(tripData.endDate).format('DD MMM')+"   "} 
         ({tripData?.totalNoOfDays} days)
        </Text>

      </View>
      </View>

       {/* Traveles Info  */}
       <View style={{
        marginTop:25,
        display:'flex',
        flexDirection:'row',
        gap:20
      }}>
      <Text style={{
        fontSize:30
      }}>🚌</Text>
      <View>
        <Text style={{
            fontFamily:'outfit',
            fontSize:17,
            color:Colors.GRAY
        }}>Who is Traveling</Text>
        <Text style={{
            fontFamily:'outfit-medium',
            fontSize:20
        }}>{tripData?.traveler?.title}
        </Text>

      </View>
      </View>

        {/* Budget Info  */}
        <View style={{
        marginTop:25,
        display:'flex',
        flexDirection:'row',
        gap:20
      }}>
      <Text style={{
        fontSize:30
      }}>💰</Text>
      <View>
        <Text style={{
            fontFamily:'outfit',
            fontSize:17,
            color:Colors.GRAY
        }}>Budget</Text>
        <Text style={{
            fontFamily:'outfit-medium',
            fontSize:20
        }}>{tripData?.budget}
        </Text>

      </View>
      </View>
      
      </View>

      <TouchableOpacity
       onPress={()=>router.replace('/create-trip/generate-trip')}
      style={{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:80
      }}>

        <Text style={{
          textAlign:'center',
          color:Colors.WHITE,
          fontFamily:'outfit-medium',
          fontSize:20,
        }}>
            Build My trip</Text>
     
      </TouchableOpacity>

    </View>
  )
}

================
File: app/create-trip/search-place.jsx
================
import { View, Text } from 'react-native'
import React, { useContext, useEffect } from 'react'
import { useNavigation, useRouter } from 'expo-router'
import { Colors } from '../../constants/Colors';
import { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';
import {CreateTripContext} from './../../context/CreateTripContext'
export default function SearchPlace() {

  const navigation=useNavigation();
  const {tripData,setTripData}=useContext(CreateTripContext);
  const router=useRouter();
  useEffect(()=>{
    navigation.setOptions({
      headerShown:true,
      headerTransparent:true,
      headerTitle:'Search'
    })
  },[]);

  useEffect(()=>{
    console.log(tripData);
  }),[tripData]

  return (
    <View 
    style={{
      padding:25,
      paddingTop:75,
      backgroundColor:Colors.WHITE,
      height:'100%'
    }}
    >
      
     
      <GooglePlacesAutocomplete
      placeholder='Search Place'
      fetchDetails={true}
      onFail={error=>console.log(error)}
      onPress={(data, details = null) => {
        // 'details' is provided when fetchDetails = true
        setTripData({
          locationInfo:{
            name:data.description,
            coordinates:details?.geometry.location,
            photoRef:details?.photos[0]?.photo_reference,
            url:details?.url
          }
        });

        router.push('/create-trip/select-traveler')
        
      }}
      query={{
        key: process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY,
        language: 'en',
      }}
      styles={{
        textInputContainer:{
          borderWidth:1,
          borderRadius:5,
          marginTop:25
        }
      }}

      
    />
 
    </View>
  )
}

================
File: app/create-trip/select-budget.jsx
================
import { View, Text, FlatList, TouchableOpacity, ToastAndroid } from 'react-native'
import React, { useContext, useEffect, useState } from 'react'
import { Link, useNavigation, useRouter } from 'expo-router'
import { SelectBudgetOptions } from '../../constants/Options';
import OptionCard from './../../components/CreateTrip/OptionCard'
import { Colors } from '../../constants/Colors';
import { CreateTripContext } from '../../context/CreateTripContext';
export default function SelectBudget() {
  
    const navigation=useNavigation();
    const [selectedOption,setSelectedOption]=useState();
  const {tripData,setTripData}=useContext(CreateTripContext);
    const router=useRouter();
    useEffect(()=>{
        navigation.setOptions({
            headerShown:true,
            headerTransparent:true,
            headerTitle:''
        })
    },[]);


    useEffect(()=>{

        selectedOption&&setTripData({
            ...tripData,
            budget:selectedOption?.title
        })
    },[selectedOption])

    const onClickContinue=()=>{
        if(!selectedOption)
        {
            ToastAndroid.show('Select Your Budget',ToastAndroid.LONG);
            return ;
        }

        router.push('/create-trip/review-trip');

    }
    return (
    <View style={{
        paddingTop:75,
        padding:25,
        backgroundColor:Colors.WHITE,
        height:'100%'
    }}>
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:35,
        marginTop:20
      }}>
        Budget
      </Text>

      <View style={{
        marginTop:20
      }}>
        <Text style={{
            fontFamily:'outfit-bold',
            fontSize:20
        }}>Choose sepending habits for your trip</Text>
     
        
        <FlatList
        data={SelectBudgetOptions}
        renderItem={({item,index})=>(
            <TouchableOpacity style={{marginVertical:10}}
            onPress={()=>setSelectedOption(item)}
            >
                <OptionCard option={item} selectedOption={selectedOption} />
            </TouchableOpacity>
        )}
        />
      </View>

      <TouchableOpacity 
      onPress={()=>onClickContinue()}
      style={{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:20
      }}>

        <Text style={{
          textAlign:'center',
          color:Colors.WHITE,
          fontFamily:'outfit-medium',
          fontSize:20
        }}>Continue</Text>
     
      </TouchableOpacity>
    </View>
  )
}

================
File: app/create-trip/select-dates.jsx
================
import { View, Text, TouchableOpacity, ToastAndroid } from 'react-native'
import React, { useContext, useEffect, useState } from 'react'
import { useNavigation, useRouter } from 'expo-router'
import { Colors } from '../../constants/Colors';
import CalendarPicker from "react-native-calendar-picker";
import moment from 'moment';
import { CreateTripContext } from '../../context/CreateTripContext';
export default function SelectDates() {
 
    const navigation=useNavigation();
    const [startDate,setStartDate]=useState();
    const [endDate,setEndDate]=useState();
  const {tripData,setTripData}=useContext(CreateTripContext);
  const router=useRouter();
    useEffect(()=>{
        navigation.setOptions({
            headerShown:true,
            headerTransparent:true,
            headerTitle:''
        })
    },[])
    

    const onDateChange=(date,type)=>{
        console.log(date,type);
        if(type=='START_DATE')
        {
            setStartDate(moment(date))
        }
        else{
            setEndDate(moment(date))
        }
    }


    const OnDateSelectionContinue=()=>{

        if(!startDate&&!endDate)
        {
            ToastAndroid.show('Please select Start and End Date',ToastAndroid.LONG)
            return ;
        }
        const totalNoOfDays=endDate.diff(startDate,'days');
        console.log(totalNoOfDays+1);
        setTripData({
            ...tripData,
            startDate:startDate,
            endDate:endDate,
            totalNoOfDays:totalNoOfDays+1
        });

        router.push('/create-trip/select-budget')
        
    }
    return (
    <View
    style={{
        padding:25,
        paddingTop:75,
        backgroundColor:Colors.WHITE,
        height:'100%'
    }}
    >
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:35,
        marginTop:20
      }}>Travel Dates</Text>

    <View style={{
        marginTop:30
    }}>
    <CalendarPicker 
    onDateChange={onDateChange}
    allowRangeSelection={true}
    minDate={new Date()}
    maxRangeDuration={5}
    selectedRangeStyle={{
        backgroundColor:Colors.PRIMARY
    }}
    selectedDayTextStyle={{
        color:Colors.WHITE
    }}
    />

    </View>

    <TouchableOpacity 
    onPress={OnDateSelectionContinue}
      style={{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:35
      }}>

        <Text style={{
          textAlign:'center',
          color:Colors.WHITE,
          fontFamily:'outfit-medium',
          fontSize:20
        }}>Continue</Text>
      </TouchableOpacity>

    </View>
  )
}

================
File: app/create-trip/select-traveler.jsx
================
import { View, Text, FlatList, TouchableOpacity } from 'react-native'
import React, { useContext, useEffect, useState } from 'react'
import { Link, useNavigation } from 'expo-router'
import {Colors } from './../../constants/Colors'
import {SelectTravelesList} from './../../constants/Options'
import OptionCard from '../../components/CreateTrip/OptionCard'
import { CreateTripContext } from '../../context/CreateTripContext'
export default function SelectTraveler() {
 
  const navigation=useNavigation();
  const [selectedTraveler,setSelectedTraveler]=useState();
  const {tripData,setTripData}=useContext(CreateTripContext);


  useEffect(()=>{
    navigation.setOptions({
      headerShown:true,
      headerTransparent:true,
      headerTitle:''
    })
  },[])

  useEffect(()=>{
    setTripData({...tripData,
      traveler:selectedTraveler
    })
  },[selectedTraveler]);

  useEffect(()=>{
    console.log(tripData);
  },[tripData])
  return (
    <View style={{
      padding:25,
      paddingTop:75,
      backgroundColor:Colors.WHITE,
      height:'100%'
    }}>
      <Text style={{
        fontSize:35,
        fontFamily:'outfit-bold',
        marginTop:20
      }}>Who's Traveling </Text>

      <View style={{

        marginTop:20
      }}>
        <Text style={{
          fontFamily:'outfit-bold',
          fontSize:23
        }}>Choose your traveles</Text>

        <FlatList
          data={SelectTravelesList}
          renderItem={({item,index})=>(
            <TouchableOpacity 
            onPress={()=>setSelectedTraveler(item)}
            style={{
              marginVertical:10
            }}>
              
              <OptionCard option={item} selectedOption={selectedTraveler} />
            </TouchableOpacity>
          )}
        />

      </View>

      <TouchableOpacity 
      style={{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        marginTop:20
      }}>

      <Link href={'/create-trip/select-dates'}
      style={{
        width:'100%',
        textAlign:'center'
      }}
      >
        <Text style={{
          textAlign:'center',
          color:Colors.WHITE,
          fontFamily:'outfit-medium',
          fontSize:20
        }}>Continue</Text>
        </Link>
      </TouchableOpacity>
      
    </View>
  )
}

================
File: app/index.tsx
================
import { Text, View } from "react-native";
import Login from './../components/Login'
import {auth} from './../configs/FirebaseConfig'
import { Redirect } from "expo-router";

export default function Index() {


  const user=auth.currentUser;

  return ( 
    <View
      style={{
        flex: 1,
      }}
    >
      {user?
        <Redirect href={'/mytrip'}/>:
        <Login/>
      }
     
    </View>
  );
}

================
File: app/trip-details/index.jsx
================
import { View, Text, Image, ScrollView } from 'react-native'
import React, { useEffect, useState } from 'react'
import { useLocalSearchParams, useNavigation } from 'expo-router'
import { Colors } from '../../constants/Colors';
import moment from 'moment'
import FlightInfo from '../../components/TripDetails/FlightInfo';
import HotelList from '../../components/TripDetails/HotelList';
import PlannedTrip from '../../components/TripDetails/PlannedTrip';
export default function TripDetails() {

    const navigation=useNavigation();
    const {trip}=useLocalSearchParams();
    const [tripDetails,setTripDetails]=useState(JSON.parse(trip));

    const formatData=(data)=>{
        return data&&JSON.parse(data);
    }
    useEffect(()=>{
        navigation.setOptions({
            headerShown:true,
            headerTransparent:true,
            headerTitle:''
        });

        trip&&setTripDetails(JSON.parse(trip))
    },[trip])

  return tripDetails&&(
    <ScrollView>
         <Image source={{uri:
        'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference='
        +formatData(tripDetails?.tripData).locationInfo?.photoRef
        +'&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY}}
        style={{
            width:'100%',
                height:330,
                
        }}
        />
        <View style={{
            padding:15,
            backgroundColor:Colors.WHITE,
            height:'100%',
            marginTop:-30,
            borderTopLeftRadius:30,
            borderTopRightRadius:30
        }}>
            <Text style={{
                fontSize:25,
                fontFamily:'outfit-bold'
            }}>{tripDetails?.tripPlan.travelPlan.location}</Text>
           <View style={{
            display:'flex',
            flexDirection:'row',
            gap:5,
            marginTop:5
           }}>
             <Text style={{
                fontFamily:'outfit',
                fontSize:18,
                color:Colors.GRAY
            }}>{moment(formatData(tripDetails.tripData).startDate).format('DD MMM yyyy')}</Text>
              <Text style={{
                fontFamily:'outfit',
                fontSize:18,
                color:Colors.GRAY
            }}> {moment(formatData(tripDetails.tripData)?.endDate).format('DD MMM yyyy')}</Text>
         </View>
         <Text style={{
                fontFamily:'outfit',
                fontSize:17,
                color:Colors.GRAY
            }}>🚌 {formatData(tripDetails.tripData)?.traveler?.title}</Text>
        
        
        {/* Flight Info  */}
      
        <FlightInfo flightData={tripDetails?.tripPlan?.travelPlan?.flight} />
        {/* Hotels List  */}
        <HotelList hotelList={tripDetails?.tripPlan?.travelPlan?.hotels} />
        {/* Trip Day Planner Info */}
        <PlannedTrip details={tripDetails?.tripPlan?.travelPlan?.itinerary} />
        </View>
{/* 
            <View>

            </View> */}

    </ScrollView>
  )
}

================
File: babel.config.js
================
module.exports = function (api) {
  api.cache(true);
  return {
    presets: ['babel-preset-expo'],
  };
};

================
File: components/CreateTrip/OptionCard.jsx
================
import { View, Text } from 'react-native'
import React from 'react'
import { Colors } from '../../constants/Colors'

export default function OptionCard({option,selectedOption}) {
  return (
    <View style={[{
        padding:25,
        display:'flex',
        flexDirection:'row',
        justifyContent:'space-between',
        backgroundColor:Colors.LIGHT_GRAY,
        borderRadius:15
    },selectedOption?.id==option?.id&&{borderWidth:3}]}>
        <View>
                <Text style={{
                    fontSize:20,
                    fontFamily:'outfit-bold'
                }}>{option?.title}</Text>
                 <Text style={{
                    fontSize:17,
                    fontFamily:'outfit',
                    color:Colors.GRAY
                }}>{option?.desc}</Text>
        </View>
        <Text style={{
            fontSize:35
        }}>{option.icon}</Text>
   
    </View>
  )
}

================
File: components/Login.jsx
================
import { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native'
import React from 'react'
import { Colors } from '@/constants/Colors'
import { useRouter } from 'expo-router'

export default function Login() {

    const router=useRouter();
  return (
    <View>
        <Image source={require('./../assets/images/login.jpeg')}
            style={{
                width:'100%',
                height:520
            }}
        />
        <View style={styles.container}>
            <Text style={{
                fontSize:30,
                fontFamily:'outfit-bold',
                textAlign:'center',
                marginTop:10
            }}>AI Travel Planner</Text>

            <Text style={{
                fontFamily:'outfit',
                fontSize:17,
                textAlign:'center',
               color:Colors.GRAY,
               marginTop:20
            }}>Discover your next adventure effortlessly. Personalized itineraries at your fingertips. Travel smarter with AI-driven insights."</Text>
       
            <TouchableOpacity style={styles.button}
                onPress={()=>router.push('auth/sign-in')}
            >
                <Text style={{color:Colors.WHITE,
                textAlign:'center',
                fontFamily:'outfit',
                fontSize:17
                }}>Get Started</Text>
            </TouchableOpacity>
    
        </View>
    </View>
  )
}

const styles = StyleSheet.create({
    container:{
        backgroundColor:Colors.WHITE,
        marginTop:-20,
        borderTopLeftRadius:30,
        borderTopRightRadius:30,
        height:'100%',
        padding:25
    },
    button:{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:99,
        marginTop:'20%'
    }
})

================
File: components/MyTrips/StartNewTripCard.jsx
================
import { View, Text, TouchableOpacity } from 'react-native'
import React from 'react'
import { Ionicons } from '@expo/vector-icons';
import { Colors } from '../../constants/Colors';
import { useRouter } from 'expo-router';

export default function StartNewTripCard() {

   const router=useRouter();

  return (
    <View
    style={{
        padding:20,
        marginTop:50,
        display:'flex',
        alignItems:'center',
        gap:25
    }}
    >
     <Ionicons name="location-sharp" size={30} color="black" />
     <Text style={{
        fontSize:25,
        fontFamily:'outfit-medium'
     }}>
        No trips planned yet
     </Text>

     <Text style={{
        fontSize:20,
        fontFamily:'outfit',
        textAlign:'center',
        color:Colors.GRAY
     }}>
        Looks like its time to plan a new travel experinece! Get Started below
     </Text>

     <TouchableOpacity
     onPress={()=>router.push('/create-trip/search-place')}
     style={{
        padding:15,
        backgroundColor:Colors.PRIMARY,
        borderRadius:15,
        paddingHorizontal:30
     }}
     >
        <Text style={{
            color:Colors.WHITE,
            fontFamily:'outfit-medium',
            fontSize:17
        }}>Start a new trip</Text>
     </TouchableOpacity>
    </View>
  )
}

================
File: components/MyTrips/UserTripCard.jsx
================
import { View, Text, Image, TouchableOpacity } from 'react-native'
import React from 'react'
import moment from 'moment'
import { Colors } from '../../constants/Colors';
import { useRouter } from 'expo-router';
export default function UserTripCard({trip}) {
    const formatData=(data)=>{
        return JSON.parse(data);
    }
    const router=useRouter();
  return (

    <TouchableOpacity
    onPress={()=>router.push({pathname: '/trip-details',
    params:{
        trip:JSON.stringify(trip)
    }})} style={{
        marginTop:20,
        display:'flex',
        flexDirection:'row',
        gap:10,
        alignItems:'center'
    }}>
        {/* <Image source={require('./../../assets/images/placeholder.jpeg')}
            style={{
                width:100,
                height:100,
                borderRadius:15
            }}
        /> */}
        <Image source={{uri:
        'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference='
        +formatData(trip.tripData).locationInfo?.photoRef
        +'&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY}}
        style={{
            width:100,
                height:100,
                borderRadius:15
        }}
        />
        <View>
            <Text style={{
                fontFamily:'outfit-medium',
                fontSize:18,
            }}>{trip.tripPlan?.travelPlan?.location}</Text>
            <Text style={{
                fontFamily:'outfit',
                fontSize:14,
                color:Colors.GRAY
            }}>{moment(formatData(trip.tripData).startDate).format('DD MMM yyyy')}</Text>
            <Text
            style={{
                fontFamily:'outfit',
                fontSize:14,
                color:Colors.GRAY
            }}>Traveling: {formatData(trip.tripData).traveler.title}</Text>

        </View>
    </TouchableOpacity>
  )
}

================
File: components/MyTrips/UserTripList.jsx
================
import { View, Text, Image, TouchableOpacity } from 'react-native'
import React from 'react'
import moment from 'moment'
import { Colors } from '../../constants/Colors'
import UserTripCard from './UserTripCard'
import { useRouter } from 'expo-router'
export default function UserTripList({userTrips}) {
    const LatestTrip=JSON.parse(userTrips[0].tripData)
    const router=useRouter();
   
  return userTrips&&(
    <View>
      <View style={{
        marginTop:20
      }}>
       {LatestTrip.locationInfo?.photoRef? 
       <Image source={{uri:
        'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference='
        +LatestTrip.locationInfo?.photoRef
        +'&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY}}
        style={{
            width:'100%',
            height:240,
            objectFit:'cover',
            borderRadius:15
        }}
        />
       :
       <Image 
        source={require('./../../assets/images/placeholder.jpeg')}
            style={{
                width:'100%',
                height:240,
                objectFit:'cover',
                borderRadius:15
            }}
        />}
        <View style={{marginTop:10}}>
            <Text style={{
                fontFamily:'outfit-medium',
                fontSize:24
            }}>{userTrips[0]?.tripPlan?.travelPlan?.location}</Text>
            <View style={{
                display:'flex',
                flexDirection:'row',
                justifyContent:'space-between',marginTop:5
            }}>
            <Text style={{
                fontFamily:'outfit',
                fontSize:17,
                color:Colors.GRAY
            }}>{moment(LatestTrip.startDate).format('DD MMM yyyy')}</Text>

            <Text style={{
                fontFamily:'outfit',
                fontSize:17,
                color:Colors.GRAY
            }}>🚌 {LatestTrip.traveler.title}</Text>
            </View>
            <TouchableOpacity 
            onPress={()=>router.push({pathname:'/trip-details',params:{
                trip:JSON.stringify(userTrips[0])
            }})}
            style={{
                backgroundColor:Colors.PRIMARY,
                padding:15,
                borderRadius:15,
                marginTop:10
            }}>
                <Text style={{
                    color:Colors.WHITE,
                    textAlign:'center',
                    fontFamily:'outfit-medium',
                    fontSize:15
                }}>See your plan</Text>
            </TouchableOpacity>
        </View>
            
        {userTrips.map((trip,index)=>(
            <UserTripCard trip={trip} key={index} />
        ))}
      </View>
    </View>
  )
}

================
File: components/TripDetails/FlightInfo.jsx
================
import { View, Text, TouchableOpacity } from 'react-native'
import React from 'react'
import { Colors } from '../../constants/Colors'

export default function FlightInfo({flightData}) {
  return (
    <View style={{
        marginTop:20,
       borderWidth:1,
       borderColor:Colors.LIGHT_GRAY,
     
        padding:10,
        borderRadius:15
    }}>
        <View style={{
            display:'flex',
            flexDirection:'row',
            justifyContent:'space-between',
            alignItems:'center'
        }}>
        <Text style={{
        fontFamily:'outfit-bold',
        fontSize:20
      }}>✈️ Flights</Text>
        <TouchableOpacity style={{
        backgroundColor:Colors.PRIMARY,
        padding:5,
        width:100,
        borderRadius:7,
        marginTop:7
      }}>
        <Text style={{
            textAlign:'center',
            color:Colors.WHITE,
            fontFamily:'outfit',
           
        }}>Book Here</Text>
      </TouchableOpacity>
        </View>
     
      <Text style={{
        fontFamily:'outfit',
        fontSize:17,
        marginTop:7
      }}>Airline: Delta</Text>
      <Text style={{
        fontFamily:'outfit',
        fontSize:17
      }}>Price: {flightData.price}</Text>
     
    </View>
  )
}

================
File: components/TripDetails/HotelCard.jsx
================
import { View, Text, Image } from 'react-native'
import React, { useEffect, useState } from 'react'
import { GetPhotoRef } from '../../services/GooglePlaceApi';

export default function HotelCard({item}) {
 
    const [photoRef,setPhotoRef]=useState();
    useEffect(()=>{
        GetGooglePhotoRef();
    },[])
    
    const GetGooglePhotoRef=async()=>{
        const result= await GetPhotoRef(item.hotelName);
        setPhotoRef(result);
       }
    return (
    <View style={{
        marginRight:20,
        width:180,
    }}>
        <Image source={{uri:
        'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference='
        +photoRef
        +'&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY}}
            style={{
                width:180,
                height:120,
                borderRadius:15,

            }}
        />
        <View style={{
            padding:5
        }}>
            <Text style={{
                fontFamily:'outfit-medium',
                fontSize:17,
                
            }}>{item.hotelName}</Text>

            <View style={{
                display:'flex',
                flexDirection:'row',
                justifyContent:'space-between'
            }}>
                <Text style={{
                    fontFamily:'outfit'
                }}>⭐ {item.rating}</Text>
                  <Text style={{
                    fontFamily:'outfit'
                }}>💰 {item.price}</Text>
            </View>
        </View>
    </View>
  )
}

================
File: components/TripDetails/HotelList.jsx
================
import { View, Text, FlatList, Image } from 'react-native'
import React, { useEffect } from 'react'
import { GetPhotoRef } from '../../services/GooglePlaceApi'
import HotelCard from './HotelCard';

export default function HotelList({hotelList}) {

 
 

  return (
    <View style={{
        marginTop:20
    }}>
      <Text style={{
        fontFamily:'outfit-bold',
        fontSize:20
      }}>🏨 Hotel Recommendation</Text>

      <FlatList
      data={hotelList}
      style={{
        marginTop:8
      }}
      showsHorizontalScrollIndicator={false}
      horizontal={true}
      renderItem={({item,index})=>(
       <HotelCard item={item} />
      )}
      />
    </View>
  )
}

================
File: components/TripDetails/PlaceCard.jsx
================
import { View, Text, Image, TouchableOpacity } from 'react-native'
import React, { useEffect, useState } from 'react'
import { Colors } from '../../constants/Colors'
import { Ionicons } from '@expo/vector-icons';
import { GetPhotoRef } from '../../services/GooglePlaceApi';

export default function PlaceCard({place}) {
    const [photoRef,setPhotoRef]=useState();
    useEffect(()=>{
        GetGooglePhotoRef();
    },[])
    
    const GetGooglePhotoRef=async()=>{
        const result= await GetPhotoRef(place.placeName);
        setPhotoRef(result);
       }
  return (
    <View style={{
                     
        backgroundColor:Colors.LIGHT_BLUE,
       padding:10,
       borderRadius:15,
       borderColor:Colors.GRAY,
       marginTop:20
   }}>
       <Image source={{uri:
        'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference='
        +photoRef
        +'&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY}}
           style={{
               width:'100%',
               height:140,
               borderRadius:15
           }}
       />
       <View style={{
           marginTop:5
       }}>
       <Text style={{
           fontFamily:'outfit-bold',
           fontSize:20
       }}>{place?.placeName}</Text>
       <Text style={{
           fontFamily:'outfit',
           fontSize:14,
           color:Colors.GRAY
       }}>{place.placeDetails}</Text>
       <View style={{
           display:'flex',
           flexDirection:'row',
           alignItems:'center',
           justifyContent:'space-between'
       }}>
       <View>
           <Text style={{
               fontFamily:'outfit',
               fontSize:17,marginTop:5
           }}>🎟️ Ticket Price: 
           <Text style={{
               fontFamily:'outfit-bold'
           }}> {place?.ticketPricing}</Text></Text>
               <Text style={{
               fontFamily:'outfit',
               fontSize:17,marginTop:5
           }}>⏱️ Time to Travel:  <Text style={{
               fontFamily:'outfit-bold'
           }}>{place?.timeToTravel}</Text></Text>
       </View>
           <TouchableOpacity style={{
               backgroundColor:Colors.PRIMARY,
               padding:8,
               borderRadius:7
           }}>
               <Ionicons name="navigate" size={20} color="white" />
           </TouchableOpacity>
       </View>
       </View>
   </View>
  )
}

================
File: components/TripDetails/PlannedTrip.jsx
================
import { View, Text, TouchableOpacity, Image } from 'react-native'
import React from 'react'
import { Colors } from '../../constants/Colors'
import { Ionicons } from '@expo/vector-icons';
import PlaceCard from './PlaceCard';
export default function PlannedTrip({details}) {
  return (
    <View style={{
        marginTop:20
    }}>
      <Text style={{
        fontSize:20,
        fontFamily:'outfit-bold'
      }}>🏕️ Plan Details</Text>

     
      {Object.entries(details).reverse().map(([day,details])=>(
        <View >
            <Text style={{
                fontFamily:'outfit-medium',
                fontSize:20,
                marginTop:20
            }}>{day.charAt(0).toUpperCase()+day.slice(1)}</Text>
            {details.plan.map((place,index)=>(
             <PlaceCard place={place} />
            ))}
        </View>
      ))}
      
    </View>
  )
}

================
File: configs/AiModal.jsx
================
const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = 'Your API Key'
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-1.5-flash",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 64,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  
 
    export const chatSession = model.startChat({
      generationConfig,
   // safetySettings: Adjust safety settings
   // See https://ai.google.dev/gemini-api/docs/safety-settings
      history: [
        {
          role: "user",
          parts: [
            {text: "Generate Travel Plan for Location : New York, NY, USA, for 3 Days and 2 Night for A Couple with a Moderate budget with a Flight details , Flight Price with Booking url, Hotels options list with HotelName, Hotel address, Price, hotel image url, geo coordinates, rating, descriptions and suggest itinerary with placeName, Place Details, Place Image Url, Geo Coordinates, ticket Pricing, Time t travel each of the location for 1 days and 1 night with each day plan with best time to visit in JSON format."},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"travelPlan\": {\n    \"location\": \"New York, NY, USA\",\n    \"duration\": \"3 Days & 2 Nights\",\n    \"travelers\": \"Couple\",\n    \"budget\": \"Moderate\",\n    \"flight\": {\n      \"details\": \"Roundtrip flight from [Your Departure City] to New York City (JFK or LGA)\",\n      \"price\": \"$300-$500 (approx.)\",\n      \"bookingUrl\": \"https://www.google.com/flights\" \n    },\n    \"hotels\": [\n      {\n        \"hotelName\": \"The Jane Hotel\",\n        \"address\": \"113-115 Greenwich Street, New York, NY 10013\",\n        \"price\": \"$150-$250/night\",\n        \"imageUrl\": \"https://images.trvl-media.com/media/content/hotels/500/1045053.jpg\",\n        \"geoCoordinates\": [40.7154, -74.0086],\n        \"rating\": 4.5,\n        \"description\": \"A charming and historic hotel in the heart of Tribeca, offering affordable and unique accommodations.\"\n      },\n      {\n        \"hotelName\": \"The Bowery Hotel\",\n        \"address\": \"305 Bowery, New York, NY 10003\",\n        \"price\": \"$200-$350/night\",\n        \"imageUrl\": \"https://images.trvl-media.com/media/content/hotels/500/2609949.jpg\",\n        \"geoCoordinates\": [40.7200, -73.9973],\n        \"rating\": 4,\n        \"description\": \"A trendy boutique hotel with stylish rooms and a vibrant atmosphere in the Lower East Side.\"\n      },\n      {\n        \"hotelName\": \"The Roosevelt Hotel\",\n        \"address\": \"45 E 45th St, New York, NY 10017\",\n        \"price\": \"$250-$400/night\",\n        \"imageUrl\": \"https://images.trvl-media.com/media/content/hotels/500/1278663.jpg\",\n        \"geoCoordinates\": [40.7515, -73.9772],\n        \"rating\": 4.2,\n        \"description\": \"A classic and elegant hotel near Grand Central Station, known for its history and luxurious amenities.\"\n      }\n    ],\n    \"itinerary\": {\n      \"day1\": {\n        \"bestTime\": \"Morning\",\n        \"plan\": [\n          {\n            \"placeName\": \"Central Park\",\n            \"placeDetails\": \"Enjoy a stroll through the iconic park, visit the Bethesda Terrace, or take a rowboat on the lake.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Central_Park_West_at_72nd_Street_view_south.jpg/1280px-Central_Park_West_at_72nd_Street_view_south.jpg\",\n            \"geoCoordinates\": [40.7829, -73.9654],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"2-3 hours\"\n          },\n          {\n            \"placeName\": \"The Metropolitan Museum of Art\",\n            \"placeDetails\": \"Explore one of the world's finest art museums, featuring a vast collection spanning centuries.\",\n            \"placeImageUrl\": \"https://www.metmuseum.org/sites/default/files/images/met-exterior-01_0.jpg\",\n            \"geoCoordinates\": [40.7794, -73.9632],\n            \"ticketPricing\": \"Suggested donation: $25\",\n            \"timeToTravel\": \"2-3 hours\"\n          },\n          {\n            \"placeName\": \"Times Square\",\n            \"placeDetails\": \"Experience the dazzling lights and bustling energy of New York City's entertainment hub.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Times_Square_at_Night.jpg/1280px-Times_Square_at_Night.jpg\",\n            \"geoCoordinates\": [40.7580, -73.9855],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"1 hour\"\n          }\n        ]\n      },\n      \"day2\": {\n        \"bestTime\": \"Morning\",\n        \"plan\": [\n          {\n            \"placeName\": \"Statue of Liberty & Ellis Island\",\n            \"placeDetails\": \"Take a ferry to Liberty Island and visit the iconic Statue of Liberty. Explore Ellis Island and learn about its history as a gateway for immigrants.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Statue_of_Liberty_from_the_ferry_with_Ellis_Island_in_the_background.jpg/1280px-Statue_of_Liberty_from_the_ferry_with_Ellis_Island_in_the_background.jpg\",\n            \"geoCoordinates\": [40.6892, -74.0445],\n            \"ticketPricing\": \"$30-$40\",\n            \"timeToTravel\": \"4-5 hours\"\n          },\n          {\n            \"placeName\": \"Brooklyn Bridge\",\n            \"placeDetails\": \"Walk or bike across the iconic Brooklyn Bridge for stunning views of the Manhattan skyline and the East River.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Brooklyn_Bridge_at_night.jpg/1280px-Brooklyn_Bridge_at_night.jpg\",\n            \"geoCoordinates\": [40.7025, -73.9963],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"1-2 hours\"\n          },\n          {\n            \"placeName\": \"Dumbo, Brooklyn\",\n            \"placeDetails\": \"Explore this charming neighborhood with its cobblestone streets, art galleries, and waterfront views.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Dumbo_Manhattan_Bridge.jpg/1280px-Dumbo_Manhattan_Bridge.jpg\",\n            \"geoCoordinates\": [40.7022, -73.9902],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"1-2 hours\"\n          }\n        ]\n      },\n      \"day3\": {\n        \"bestTime\": \"Morning\",\n        \"plan\": [\n          {\n            \"placeName\": \"The High Line\",\n            \"placeDetails\": \"Take a stroll along this elevated park built on a former railway line, offering unique views of the city.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/The_High_Line_from_the_south.jpg/1280px-The_High_Line_from_the_south.jpg\",\n            \"geoCoordinates\": [40.7486, -74.0058],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"1-2 hours\"\n          },\n          {\n            \"placeName\": \"Chelsea Market\",\n            \"placeDetails\": \"Explore this vibrant food hall with a variety of vendors offering everything from gourmet food to artisan crafts.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/Chelsea_Market_NY.jpg/1280px-Chelsea_Market_NY.jpg\",\n            \"geoCoordinates\": [40.7413, -74.0017],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"1-2 hours\"\n          },\n          {\n            \"placeName\": \"Little Italy & Chinatown\",\n            \"placeDetails\": \"Immerse yourselves in the vibrant cultures of these two neighborhoods, enjoying authentic food and exploring the markets.\",\n            \"placeImageUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8e/Chinatown%2C_New_York_City.jpg/1280px-Chinatown%2C_New_York_City.jpg\",\n            \"geoCoordinates\": [40.7184, -73.9970],\n            \"ticketPricing\": \"Free\",\n            \"timeToTravel\": \"2-3 hours\"\n          }\n        ]\n      }\n    }\n  }\n}\n```\n\n**Please note:**\n\n* This is a sample itinerary and can be customized based on your preferences.\n* Flight prices are approximate and can vary depending on the time of year and booking date.\n* Hotel prices are also approximate and can fluctuate based on demand and availability.\n* Remember to check for any entry fees or reservation requirements for specific attractions. \n* Have a wonderful time in New York City! \n"},
          ],
        },
      ],
    });
  
    // const result = await chatSession.sendMessage("INSERT_INPUT_HERE");
    // console.log(result.response.text());

================
File: configs/FirebaseConfig.js
================
// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
import { getAuth } from "firebase/auth";
import { getFirestore } from "firebase/firestore";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyDw_h6J9oAg_2HdpsDpPtsKIn-v0qOV14M",
  authDomain: "tubeguruji-startups.firebaseapp.com",
  projectId: "tubeguruji-startups",
  storageBucket: "tubeguruji-startups.appspot.com",
  messagingSenderId: "706430327770",
  appId: "1:706430327770:web:08482219ed803a0aad3ee3",
  measurementId: "G-40ZKDR29LV"
};

// Initialize Firebase
export const app = initializeApp(firebaseConfig);
export const auth = getAuth(app)
export const db = getFirestore(app);

================
File: constants/Colors.ts
================
/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const tintColorLight = '#0a7ea4';
const tintColorDark = '#fff';

export const Colors = {
  WHITE:'#fff',
  PRIMARY:'#000',
  GRAY:'#7d7d7d',
  LIGHT_GRAY:'#f2f2f2',
  LIGHT_BLUE:'#edf7ff',
  light: {
    text: '#11181C',
    background: '#fff',
    tint: tintColorLight,
    icon: '#687076',
    tabIconDefault: '#687076',
    tabIconSelected: tintColorLight,
  },
  dark: {
    text: '#ECEDEE',
    background: '#151718',
    tint: tintColorDark,
    icon: '#9BA1A6',
    tabIconDefault: '#9BA1A6',
    tabIconSelected: tintColorDark,
  },
};

================
File: constants/Options.js
================
export const SelectTravelesList=[
    {
        id:1,
        title:'Just Me',
        desc:'A sole traveles in exploration',
        icon:'✈️',
        people:'1'
    },
    {
        id:2,
        title:'A Couple',
        desc:'Two traveles in tandem',
        icon:'🥂',
        people:'2 People'
    },
    {
        id:3,
        title:'Family',
        desc:'A group of fun loving adv',
        icon:'🏡',
        people:'3 to 5 People'
    },
    {
        id:4,
        title:'Friends',
        desc:'A bunch of thrill-seekes',
        icon:'⛵',
        people:'5 to 10 People'
    },
]


export const SelectBudgetOptions=[
    {
        id:1,
        title:'Cheap',
        desc:'Stay conscious of costs',
        icon:'💵',
    },
    {
        id:2,
        title:'Moderate',
        desc:'Keep cost on the average side',
        icon:'💰',
    },
    {
        id:3,
        title:'Luxury',
        desc:'Dont worry about cost',
        icon:'💸',
    },
]


export const AI_PROMPT='Generate Travel Plan for Location : {location}, for {totalDays} Days and {totalNight} Night for {traveler} with a {budget} budget with a Flight details , Flight Price with Booking url, Hotels options list with HotelName, Hotel address, Price, hotel image url, geo coordinates, rating, descriptions and  suggest itinerary with placeName, Place Details, Place Image Url, Geo Coordinates, ticket Pricing, Time t travel each of the location for {totalDays} days and {totalNight} night with each day plan with best time to visit in JSON format.'

================
File: context/CreateTripContext.js
================
import { createContext } from "react";

export const CreateTripContext=createContext(null);

================
File: package.json
================
{
  "name": "ai-travel-planner-app",
  "main": "expo-router/entry",
  "version": "1.0.0",
  "scripts": {
    "start": "expo start",
    "reset-project": "node ./scripts/reset-project.js",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "test": "jest --watchAll",
    "lint": "expo lint"
  },
  "jest": {
    "preset": "jest-expo"
  },
  "dependencies": {
    "@expo/cli": "^0.18.29",
    "@expo/vector-icons": "^14.0.2",
    "@google/generative-ai": "^0.14.0",
    "@react-native-async-storage/async-storage": "1.23.1",
    "@react-native-google-signin/google-signin": "^12.2.1",
    "@react-navigation/native": "^6.0.2",
    "date-fns": "^3.6.0",
    "expo": "~51.0.16",
    "expo-constants": "~16.0.2",
    "expo-font": "~12.0.7",
    "expo-linking": "~6.3.1",
    "expo-router": "~3.5.17",
    "expo-splash-screen": "~0.27.5",
    "expo-status-bar": "~1.12.1",
    "expo-system-ui": "~3.0.6",
    "expo-web-browser": "~13.0.3",
    "firebase": "^10.12.2",
    "moment": "^2.30.1",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-native": "0.74.2",
    "react-native-calendar-picker": "^8.0.4",
    "react-native-gesture-handler": "~2.16.1",
    "react-native-google-places-autocomplete": "^2.5.6",
    "react-native-reanimated": "~3.10.1",
    "react-native-safe-area-context": "4.10.1",
    "react-native-screens": "3.31.1",
    "react-native-web": "~0.19.10",
    "yaml": "^2.5.1"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@types/jest": "^29.5.12",
    "@types/react": "~18.2.45",
    "@types/react-test-renderer": "^18.0.7",
    "jest": "^29.2.1",
    "jest-expo": "~51.0.3",
    "react-test-renderer": "18.2.0",
    "typescript": "~5.3.3"
  },
  "private": true
}

================
File: README.md
================
# Welcome to your Expo app 👋

This is an [Expo](https://expo.dev) project created with [`create-expo-app`](https://www.npmjs.com/package/create-expo-app).

## Get started

1. Install dependencies

   ```bash
   npm install
   ```

2. Start the app

   ```bash
    npx expo start
   ```

In the output, you'll find options to open the app in a

- [development build](https://docs.expo.dev/develop/development-builds/introduction/)
- [Android emulator](https://docs.expo.dev/workflow/android-studio-emulator/)
- [iOS simulator](https://docs.expo.dev/workflow/ios-simulator/)
- [Expo Go](https://expo.dev/go), a limited sandbox for trying out app development with Expo

You can start developing by editing the files inside the **app** directory. This project uses [file-based routing](https://docs.expo.dev/router/introduction).

## Get a fresh project

When you're ready, run:

```bash
npm run reset-project
```

This command will move the starter code to the **app-example** directory and create a blank **app** directory where you can start developing.

## Learn more

To learn more about developing your project with Expo, look at the following resources:

- [Expo documentation](https://docs.expo.dev/): Learn fundamentals, or go into advanced topics with our [guides](https://docs.expo.dev/guides).
- [Learn Expo tutorial](https://docs.expo.dev/tutorial/introduction/): Follow a step-by-step tutorial where you'll create a project that runs on Android, iOS, and the web.

## Join the community

Join our community of developers creating universal apps.

- [Expo on GitHub](https://github.com/expo/expo): View our open source platform and contribute.
- [Discord community](https://chat.expo.dev): Chat with Expo users and ask questions.

================
File: scripts/reset-project.js
================
#!/usr/bin/env node

/**
 * This script is used to reset the project to a blank state.
 * It moves the /app directory to /app-example and creates a new /app directory with an index.tsx and _layout.tsx file.
 * You can remove the `reset-project` script from package.json and safely delete this file after running it.
 */

const fs = require('fs');
const path = require('path');

const root = process.cwd();
const oldDirPath = path.join(root, 'app');
const newDirPath = path.join(root, 'app-example');
const newAppDirPath = path.join(root, 'app');

const indexContent = `import { Text, View } from "react-native";

export default function Index() {
  return (
    <View
      style={{
        flex: 1,
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <Text>Edit app/index.tsx to edit this screen.</Text>
    </View>
  );
}
`;

const layoutContent = `import { Stack } from "expo-router";

export default function RootLayout() {
  return (
    <Stack>
      <Stack.Screen name="index" />
    </Stack>
  );
}
`;

fs.rename(oldDirPath, newDirPath, (error) => {
  if (error) {
    return console.error(`Error renaming directory: ${error}`);
  }
  console.log('/app moved to /app-example.');

  fs.mkdir(newAppDirPath, { recursive: true }, (error) => {
    if (error) {
      return console.error(`Error creating new app directory: ${error}`);
    }
    console.log('New /app directory created.');

    const indexPath = path.join(newAppDirPath, 'index.tsx');
    fs.writeFile(indexPath, indexContent, (error) => {
      if (error) {
        return console.error(`Error creating index.tsx: ${error}`);
      }
      console.log('app/index.tsx created.');

      const layoutPath = path.join(newAppDirPath, '_layout.tsx');
      fs.writeFile(layoutPath, layoutContent, (error) => {
        if (error) {
          return console.error(`Error creating _layout.tsx: ${error}`);
        }
        console.log('app/_layout.tsx created.');
      });
    });
  });
});

================
File: services/GooglePlaceApi.jsx
================
export const GetPhotoRef=async(placeName)=>{

    const resp=await fetch('https://maps.googleapis.com/maps/api/place/textsearch/json'+
    '?query='+placeName+
    '&key='+process.env.EXPO_PUBLIC_GOOGLE_MAP_KEY);

    const result=await resp.json();
    // console.log(result);
    return result?.results[0]?.photos[0]?.photo_reference;    
}

================
File: services/LocalStorageService.jsx
================
import AsyncStorage from '@react-native-async-storage/async-storage';

const storeData = async (key,value) => {
    try {
        const jsonValue = JSON.stringify(value);
      await AsyncStorage.setItem(key, jsonValue);
    } catch (e) {
      // saving error
    }
  };

  const getData = async (key) => {
    try {
      const jsonValue = await AsyncStorage.getItem(key);
      return jsonValue != null ? JSON.parse(jsonValue) : null;
     
    } catch (e) {
      // error reading value
    }
  };

  export default{
    storeData,
    getData
  }

================
File: tsconfig.json
================
{
  "extends": "expo/tsconfig.base",
  "compilerOptions": {
    "strict": true,
    "paths": {
      "@/*": [
        "./*"
      ]
    }
  },
  "include": [
    "**/*.ts",
    "**/*.tsx",
    ".expo/types/**/*.ts",
    "expo-env.d.ts"
, "services/LocalStorageService.jsx", "app/_layout.jsx"  ]
}
